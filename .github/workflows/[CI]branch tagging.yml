name: "[CI]branch tagging"
on:
  workflow_dispatch:
    inputs:
      tag:
        description: '`x.y.z-릴리즈` 형태로 버전을 입력해주세요. `x.y.z`도 가능합니다. v접두사는 자동으로 첨가됩니다.'
        required: true
        default: 1.2.3

env:
  SERVICE: console-assets

jobs:
  
  condition_check:
    runs-on: ubuntu-latest
    outputs:
      NOT_FIRST_TAG: ${{ steps.job1.outputs.not_first_tag }}
    steps:
      - uses: actions/checkout@v2
      - name: if master, exit
        run: |
          if [ ${{ github.ref }} = refs/heads/master ]
            then exit 1
          fi
      - name: if not same branch, exit
        run: |
          if [ $(echo ${{ github.event.inputs.tag }} | cut -c 1-5) != $(cat src/VERSION | cut -c 2-6) ]
            then exit 1
          fi
      - name: totally same version, redeploy dockerhub
        id: job1
        run: |
          if [ $(cat src/VERSION) = v${{ github.event.inputs.tag }} ]
            then echo "::set-output name=not_first_tag::true"
            else echo "::set-output name=not_first_tag::false"
          fi

  update_master_branch_version_file:
    needs: condition_check
    runs-on: ubuntu-latest
    if: ${{ needs.condition_check.outputs.NOT_FIRST.TAG }} = 'false'
    steps:
      - name: update master version
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.PAT_TOKEN }}
          event-type: update_master_version
          client-payload: '{"version": "${{ github.event.inputs.tag }}"}'

  update_local_version_file:
    needs: condition_check
    runs-on: ubuntu-latest
    if: ${{ needs.condition_check.outputs.NOT_FIRST.TAG }} = 'false'
    env:
      VERSION: v${{ github.event.inputs.tag }}
    steps:
      - name: task
        uses: actions/checkout@v2
      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git pull
          echo ${{ env.VERSION }} > src/VERSION
          git add .
          git commit -m "[CI/CD] release version ${{ env.VERSION }}"
          git tag ${{ env.VERSION }} ${{ github.ref }} 
          git push --atomic origin ${{ github.ref }} ${{ env.VERSION }}

  # pypi:
  #   if: github.repository_owner == 'spaceone-dev'
  #   needs: [condition_check, update_local_version_file]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: set version
  #       run: |
  #         echo ${{ github.event.inputs.tag }} | sed -e 's/-//g' > src/VERSION
  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.8'
  #     - name: Install dependencies
  #       run: |
  #           python -m pip install --upgrade pip
  #           pip install setuptools wheel twine
  #     - name: Build
  #       run: |
  #         cd src
  #         python setup.py sdist bdist_wheel
  #     - name: Upload Pypi
  #       id: upload
  #       run: |
  #         cd src
  #         twine upload dist/*.whl --username ${{ secrets.PYPI_USERNAME }} --password ${{ secrets.PYPI_PASSWORD }} --verbose

  docker:
    needs: [condition_check, update_local_version_file]
    if: github.repository_owner == 'spaceone-dev'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: versioning by the convetion
        run: |
          echo "::set-env name=VERSION::$(echo ${{ github.event.inputs.tag }} | sed -e 's/-//g')"
      - name: Upload docker
        uses: docker/build-push-action@v1
        with:
          path: .
          repository: spaceone/${{ env.SERVICE }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: ${{ env.VERSION }}

  notify_to_slack:
    if: github.repository_owner == 'spaceone-dev'
    needs: [condition_check, update_local_version_file, docker]
    runs-on: ubuntu-latest
    steps:
      - name: Slack
        if: always()
        uses: 8398a7/action-slack@v3.2.0
        with:
          status: ${{job.status}}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          author_name: Github Action Slack
        env:
          SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}
